/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package cumulative.poetry;

public class Poet {
	
	//Initialise poem 
	String[] poem;
	Poet(){
		Poem poem = new Poem();
		this.poem = poem.eachdaytale;
	}
	
	//Functionality to Reveal Poem day wise
	public String revealforday(int day) {
		if(day < 1 || day > 12) {
			return "Invalid Days";
		}
		String poemtillday = poem[11];
		for(int i = 1;i < day;i++) {
			poemtillday = poem[11 - i]+ "\n" + poemtillday;
		}
		return "This is " + poemtillday + ".";
	}
	
	//Functionality to Reveal Poem at once day wise
    public String recite() {
    	String recitepoem = poem[11];
		String result = "Day 1 - \nThis is " + recitepoem + "." + "\n\n";
		for(int i = 1;i < 12;i++) {
			recitepoem = poem[11 - i]+ "\n" + recitepoem;
			int day = i + 1;
			if(day == 12)
				result = result + "Day "+ day +" - \nThis is " + recitepoem + ".";
			else 
				result = result + "Day "+ day +" - \nThis is " + recitepoem + "." + "\n\n";
		}
		return result;
    }
    
    //Functionality to Reveal Poem day wise with Echo
  	public String revealforday_echo(int day) {
  		if(day < 1 || day > 12) {
  			return "Invalid Days";
  		}
  		String poemtillday = poem[11] + "\n" + poem[11];
  		for(int i = 1;i < day;i++) {
  			poemtillday = poem[11 - i]+ "\n" + poemtillday;
  			poemtillday = poem[11 - i]+ "\n" + poemtillday;
  		}
  		return "This is " + poemtillday + ".";
  	}
  	
  	//Functionality to Reveal Poem at once day wise with Echo
    public String recite_echo() {
    	String recitepoem = poem[11]+ "\n" + poem[11];
		String result = "Day 1 - \nThis is " + recitepoem + "." + "\n\n";
		for(int i = 1;i < 12;i++) {
			recitepoem = poem[11 - i]+ "\n" + recitepoem;
			recitepoem = poem[11 - i]+ "\n" + recitepoem;
			int day = i + 1;
			if(day == 12)
				result = result + "Day "+ day +" - \nThis is " + recitepoem + ".";
			else 
				result = result + "Day "+ day +" - \nThis is " + recitepoem + "." + "\n\n";
		}
		return result;
    }
}
